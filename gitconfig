# ~/.gitconfig

[user]
  name = Tyler Brazier
  email = tyler@tylerbrazier.com

[color]
  ui = true

[core]
  editor = vim

[diff]
  tool = vimdiff

[push]
  default = simple  # default behavior

[include]
  path = .git-back

[alias]
  a = add -A                       # add everything
  b = branch                       # easier to type
  c = commit -v                    # show diff when committing
  ch = checkout                    # easier to type
  d = difftool -y -t vimdiff HEAD  # no prompt, use vimdiff tool
  f = fetch --all --prune          # fetch all branches and prune dead ones
  l = log --stat                   # also show changed files
  r = remote                       # easier to type
  s = status                       # easier to type

  # Usage: git up [args for push]
  # Add everything to the index, commit, and push.
  # Additional arguments given will be passed onto `git push`.
  up = "!up() { git add -A && git commit -v && git push $@; }; up"

  # Usage: git down [args for pull]
  # Stash everything (including untracked files), pull, and pop stash.
  # Additional arguments given will be passed onto `git pull`.
  down = "!down() { \
    [ -n \"$(git status --porcelain)\" ] && git stash -u; \
    stashed=$?; \
    git pull $@; \
    [ $stashed -ne 0 ] || git stash pop; \
  }; down"

  # Usage: git out [<remote>] <branch>
  # If <remote> isn't given, it defaults to origin.
  # Delete <branch> locally and on <remote>.
  out = "!out() { \
    if [ $# -eq 1 ]; then \
      remote=origin; \
      branch=$1; \
    elif [ $# -eq 2 ]; then \
      remote=$1; \
      branch=$2; \
    else \
      echo 'Usage: git out [<remote>] <branch>' >&2; \
      exit 1; \
    fi; \
    git branch -D $branch; \
    git push $remote --delete $branch; \
  }; out"

