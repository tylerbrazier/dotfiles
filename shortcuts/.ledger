#!/bin/bash
# https://github.com/termux/termux-widget
# Add an entry to the ledger file that has 4 columns separated by tabs:
# Date	Amount	Category	Description
# Categories can be used to group rows.
# Later you can make some fancy awk scripts to build reports.

ledger="$HOME/storage/shared/backup/docs/ledger"
taxes="$HOME/storage/shared/backup/docs/taxes"
docpic="$HOME/.shortcuts/docpic"

valid_date() { [[ "$date" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; }
valid_amount() { [[ "$amount" =~ ^[+-][0-9]+(\.[0-9]+)?$ ]]; }
valid_description() { [[ "$description" =~ ^[^\	]+$ ]]; }
valid_category() { [[ "$category" =~ ^[a-z0-9]{1,7}$ ]]; }
valid_answer() { [[ "$1" =~ ^[yn] ]]; }

[ -f "$ledger" ] || { echo "No $ledger" >&2; exit 1; }

until valid_date; do
	read -erp "Date: " -i "$(date +%Y-%m-%d)" date
done

until valid_amount; do
	read -erp "Amount: $" -i "-" amount
done

# make a tmp file for each category so tab completion works
t="$(mktemp -d)"
cd "$t" || exit
awk -F '\t' 'NR>1{print $3}' "$ledger" | sort | uniq | xargs touch
until valid_category; do
	read -erp "Category: " -i "$category" category
done
cd "$OLDPWD" || exit
rm -r "$t"

until valid_description; do
	read -erp "Description: " -i "$description" description
done

echo "$date	$amount	$category	$description" >> "$ledger"

less -S +G "$ledger"

until valid_answer "$tax_note"; do
	read -erp "Note for taxes? " -i 'n' tax_note
done
if [ "${tax_note:0:1}" == "y" ]; then
	read -eri "echo '$date	$amount	$category	$description' >> $taxes"
	eval "$REPLY"
	less -S +G "$taxes"
	until valid_answer "$receipt"; do
		read -erp "docpic receipt? " -i 'y' receipt
	done
	[[ "${receipt:0:1}" == "y" ]] && bash "$docpic"
fi
